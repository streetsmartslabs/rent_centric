=begin
#V4 Online API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v4

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for RentCentric::SettingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'SettingApi' do
  before do
    # run before each test
    @instance = RentCentric::SettingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SettingApi' do
    it 'should create an instance of SettingApi' do
      expect(@instance).to be_instance_of(RentCentric::SettingApi)
    end
  end

  # unit tests for setting_get_api_version
  # @param mobile_name 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseMobileAppVersionDTO]
  describe 'setting_get_api_version test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_countries
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListCountryDTO]
  describe 'setting_get_countries test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_currency_symbol
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :location_id 
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseString]
  describe 'setting_get_currency_symbol test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_location_current_date_time
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :location_id 
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseDateTime]
  describe 'setting_get_location_current_date_time test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_location_public_setting
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :location_id 
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseLocationPublicSettingDTO]
  describe 'setting_get_location_public_setting test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_minimum_age
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :location_id 
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseInt32]
  describe 'setting_get_minimum_age test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_pay_methods
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListPayMethodDTO]
  describe 'setting_get_pay_methods test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_self_service_car_rental_setup
  # @param location_id 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseSelfServiceCarRentalSetupDTO]
  describe 'setting_get_self_service_car_rental_setup test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_get_states
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListStateDTO]
  describe 'setting_get_states test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for setting_is_system_under_maintenance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseBoolean]
  describe 'setting_is_system_under_maintenance test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
