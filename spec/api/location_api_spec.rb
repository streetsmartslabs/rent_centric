=begin
#V4 Online API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v4

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for RentCentric::LocationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'LocationApi' do
  before do
    # run before each test
    @instance = RentCentric::LocationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of LocationApi' do
    it 'should create an instance of LocationApi' do
      expect(@instance).to be_instance_of(RentCentric::LocationApi)
    end
  end

  # unit tests for location_get_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListLocationDTO]
  describe 'location_get_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_nearest_location
  # @param latitude 
  # @param longitude 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseLocationDTO]
  describe 'location_get_nearest_location test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_offsite_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListLocationDTO]
  describe 'location_get_offsite_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_one_way_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListOneWayLocation]
  describe 'location_get_one_way_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_one_way_offsite_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListOneWayLocation]
  describe 'location_get_one_way_offsite_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_one_way_parent_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListOneWayLocation]
  describe 'location_get_one_way_parent_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_get_parent_locations
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseListLocationDTO]
  describe 'location_get_parent_locations test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for location_is_location_open
  # @param location_id 
  # @param dt_value 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :authorization {token_type} {access_token}
  # @return [ResponseBoolean]
  describe 'location_is_location_open test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
